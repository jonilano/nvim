snippet for "for loop" b
for (var i = 0, len = ${1:list}.length; i < len; i++) {
	var ${2:item} = $1[i];
	${VISUAL}$0
}
endsnippet

snippet umd "universal module loader" b
void (function (root, factory) {
	if (typeof define === 'function' && define.amd) define(factory)
	else if (typeof exports === 'object') module.exports = factory()
	else root.${1:MODULENAME} = factory()
}(this, function () {

	${VISUAL}$0

})); // eslint-disable-line semi
endsnippet

snippet umd! "universal module loader with deps" b
void (function (root, factory) {
	if (typeof define === 'function' && define.amd) {
		define(['jquery'], factory)
	} else if (typeof exports === 'object') {
		module.exports = factory(require('jquery'))
	} else {
		root.${1:MODULENAME} = factory(root.jQuery)
	}
}(this, function ($) {

	${VISUAL}$0

})); // eslint-disable-line semi
endsnippet

snippet forof "for"
for (const ${2:item} of ${1:list}) {
	${VISUAL}$0
}
endsnippet

snippet meow "meow.js (es6+)" b
const cli = require('meow')(\`
	Usage:
		$ ${1:yourapp}

  Options:
    -h, --help       show usage information
    -v, --version    print version info and exit
\`, {
	boolean: ['help', 'version'],
	alias: {
		h: 'help', v: 'version'
	}
})

console.log(cli.flags, cli.input)
endsnippet

snippet meow "meow.js (es5)" b
var cli = require('meow')([
	'Usage:',
	'  $ ${1:yourapp}',
  '',
  'Options:',
  '  -h, --help       show usage information',
  '  -v, --version    print version info and exit'
].join('\n'), {
	boolean: ['help', 'version'],
	alias: {
		h: 'help', v: 'version'
	}
})

console.log(cli.flags, cli.input)
endsnippet

snippet u "use strict" b
'use strict'

endsnippet

snippet r "require" b
require
endsnippet

snippet v "var require" b
var $1 = require('$2')$0
endsnippet

snippet c "const require" b
const $1 = require('$2')$0
endsnippet

snippet i "import" b
import $1 from '$2'$0
endsnippet
